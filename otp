#!/bin/bash

dir="$HOME/.otp"

if [[ ! -d $dir ]]; then
	mkdir -p $dir
	chmod 700 $dir
fi

print_help() {
	cat <<EOF
otp is a command line tool to display 2FA totp codes, similar to Google/Lastpass/Microsoft Authenticator mobile apps.

Options:
	--help		print this help message and exit
	--add		<service> Add a service and its TOTP secret
	--rm		<service> Remove a service
	--list		List all services stored with otp (at ~/.otp)
EOF
}

uid="varunchari@yahoo.com"
uid="$(cat ${dir}/.uid)"

if [[ $uid == "" ]]; then
	echo "Set email with --uid"
	exit 1
fi

# Now build CLI argss
service="$2"
k="${dir}/${service}"
kg="${k}.gpg"

case "${1}" in
"--rm" | "-r")
	[[ -f $FILE ]] && rm -i $kg
	;;
"--uid" | "-u")
	email="$2"
	if [[ "$service" == "" ]]; then
		echo "Your keys are:"
		gpg --list-secret-keys | rip -o "<.+>"
		exit 0
	else
		echo $2 >${dir}/.uid
	fi
	;;

"--add" | "-a")
	# failsafe stuff
	if [[ "$service" == "" ]]; then
		echo "Usage: $0 --add service"
		exit 1
	elif [[ ! -f "$k" ]]; then
		echo "$0 - Error: $k file not found."
		exit 2
	elif [[ -f "$kg" ]]; then
		echo "$0 - Error: Encrypted file \"$kg\" exists."
		exit 3
	fi
	gpg -r "${uid}" --encrypt "$k" && rm -vf "$k"
	;;
"--list" | "-l")
	basename -s .gpg $(ls -1 $dir)
	;;
"--help" | "-h")
	print_help
	;;
*)
	service="$1"
	k="${dir}/${service}"
	kg="${k}.gpg"
	# failsafe stuff
	if [[ "$1" == "" ]]; then
		echo "Usage: $0 service"
		exit 1
	elif [[ ! -f "$kg" ]]; then
		echo "Error: Encrypted file \"$kg\" not found."
		exit 2
	fi

	# Get totp secret for given service
	totp=$(gpg --quiet --decrypt "$kg")

	# Generate 2FA totp
	code=$(oathtool -b --totp "$totp")

	## Copy to clipboard ##
	echo $code | clip

	# Make sure we don't have .key file in plain text format ever #
	[ -f "$k" ] && echo "Warning - Plain text key file \"$k\" found."
	;;

esac
